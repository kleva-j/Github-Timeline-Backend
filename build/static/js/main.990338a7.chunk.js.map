{"version":3,"sources":["reducers/user.ts","contexts/UserContext.tsx","reducers/auth.ts","contexts/AuthContext.tsx","ApolloLinkConfig.ts","components/protected.route.tsx","services/api.ts","components/Footer.tsx","assets/svg/Bars.svg","components/Navbar.tsx","views/Timeline.tsx","styled/index.tsx","assets/img/github.svg","assets/img/bg_1.png","views/Login.tsx","components/TagList.tsx","components/Pagination.tsx","components/Form.tsx","assets/svg/Company_logo.svg","components/JobsTemplate/template2.tsx","assets/img/loading-gif.webp","assets/img/no-content.webp","assets/img/error-gif.webp","components/AllJobs.tsx","GraphQL/Queries.ts","views/Jobs.tsx","App.tsx","actions/auth.ts","index.tsx"],"names":["initialState","loading","currentUser","undefined","isAuthenticated","error","theme","UserReducer","state","UserStateContext","createContext","UserDispatchContext","UserProvider","children","useReducer","user","dispatch","Provider","value","token","AuthReducer","action","type","payload","auth_token","errorMessage","Error","AuthStateContext","AuthDispatchContext","useAuthState","context","useContext","AuthProvider","log","console","connections","cancelRequestLink","ApolloLink","operation","forward","Observable","observer","getContext","connectionHandle","subscribe","next","cleanUp","complete","unsubscribe","requestTrackerId","controller","AbortController","signal","onabort","setContext","fetchOptions","abort","errorLink","onError","graphQLErrors","networkError","forEach","message","locations","path","link","from","HttpLink","uri","process","ProtectedRoute","Component","component","rest","render","props","to","pathname","location","UserAuth","baseUrl","Request","get","endpoint","config","url","ajax","method","headers","Accept","pipe","retry","catchError","of","validate","Footer","memo","absolute","data-testid","className","Date","getFullYear","target","href","rel","Navbar","transparent","navState","React","useState","navbarOpen","setNavbarOpen","aria-labelledby","onClick","src","Bars","alt","id","Timeline","Helmet","name","content","Button","styled","LoginBg","JobItem2","TagContainer","Tag","active","TagSm","RefetchBtn","Login","history","useHistory","useEffect","push","bgImg","githubImg","Tags","title","isActive","TagList","setParams","setState","handleUpdate","useCallback","params","filter","item","reduce","prev","description","full_time","join","map","index","newList","handleClick","Pager","noOfItems","setPage","limit","Math","floor","numberOfPages","usePagination","initialPage","maxButtons","activePage","isFirst","isLast","hasPrevious","hasNext","visiblePieces","goToPage","aria-label","window","scrollTo","viewBox","d","pageNumber","SearchForms","htmlFor","placeholder","options","year","month","day","lang","navigator","language","Template2","company","created_at","company_url","company_logo","date","formatedDate","Intl","DateTimeFormat","format","defaultLogo","GetAllJobs","data","currentPage","refetch","offset","loadingGif","errorGif","jobs","length","noContent","slice","key","LOAD_JOBS","gql","GenerateNameSpace","getNS","Jobs","page","setCurrentPage","useQuery","variables","notifyOnNetworkStatusChange","uuidNameSpace","prevState","App","useAuthDispatch","userEvent","result","status","response","auth","validateUser","charSet","exact","client","ApolloClient","cache","InMemoryCache","queryDeduplication","rootElement","document","getElementById","Node"],"mappings":"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","file":"static/js/main.990338a7.chunk.js","sourcesContent":["import { UserInterface } from 'contexts/UserContext';\r\n\r\nexport const initialState: UserInterface = {\r\n  loading: false,\r\n  currentUser: undefined,\r\n  isAuthenticated: false,\r\n  error: null,\r\n  theme: {},\r\n};\r\n\r\nexport const UserReducer = (state = initialState, _action: any) => state;\r\n","import React, { createContext, useReducer, useContext } from 'react';\r\n\r\nimport { initialState, UserReducer } from 'reducers/user';\r\n\r\nexport interface UserInterface {\r\n  currentUser: User | undefined;\r\n  loading: boolean;\r\n  isAuthenticated: boolean;\r\n  error: Error | null;\r\n  theme?: any;\r\n}\r\n\r\ntype User = {\r\n  username: string | undefined;\r\n};\r\n\r\nexport const UserStateContext = createContext<UserInterface>(initialState);\r\nexport const UserDispatchContext = createContext<React.Dispatch<any> | null>(null);\r\n\r\nexport const useUserState = () => {\r\n  const context = useContext(UserStateContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUserState must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useUserDispatch = () => {\r\n  const context = useContext(UserDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error('useUserDispatch must be used within a UserProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const UserProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, dispatch] = useReducer(UserReducer, initialState);\r\n\r\n  return (\r\n    <UserStateContext.Provider value={user}>\r\n      <UserDispatchContext.Provider value={dispatch}>{children}</UserDispatchContext.Provider>\r\n    </UserStateContext.Provider>\r\n  );\r\n};\r\n","type Iuser = {\r\n  username: string;\r\n};\r\n\r\nexport interface IState {\r\n  user: Iuser | null;\r\n  token: string;\r\n  isAuthenticated: boolean;\r\n  loading: boolean;\r\n  error: null | string;\r\n}\r\n\r\nexport const initialState: IState = {\r\n  user: null,\r\n  token: '',\r\n  isAuthenticated: false,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nexport const AuthReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case 'REQUEST_LOGIN':\r\n    case 'VALIDATE_USER':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload.user,\r\n        token: action.payload.auth_token,\r\n        loading: false,\r\n      };\r\n\r\n    case 'VALIDATE_SUCCESS': {\r\n      const { isAuthenticated } = action.payload;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        isAuthenticated,\r\n      };\r\n    }\r\n\r\n    case 'VALIDATE_ERROR': {\r\n      const { error } = action.payload;\r\n      return {\r\n        ...state,\r\n        error,\r\n        loading: false,\r\n      };\r\n    }\r\n\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: '',\r\n        token: '',\r\n      };\r\n\r\n    case 'LOGIN_ERROR':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        errorMessage: action.error,\r\n      };\r\n\r\n    default:\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n  }\r\n};\r\n","import React, { createContext, useContext, useReducer } from 'react';\r\n\r\nimport { AuthReducer, initialState, IState } from 'reducers/auth';\r\n\r\nexport const AuthStateContext = createContext<IState>(initialState);\r\nexport const AuthDispatchContext = createContext<React.Dispatch<any> | null>(null);\r\n\r\nexport const useAuthState = () => {\r\n  const context = useContext(AuthStateContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuthState must be used within a AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const useAuthDispatch = () => {\r\n  const context = useContext(AuthDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuthDispatch must be used within a AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, dispatch] = useReducer(AuthReducer, initialState);\r\n\r\n  return (\r\n    <AuthStateContext.Provider value={user}>\r\n      <AuthDispatchContext.Provider value={dispatch}>{children}</AuthDispatchContext.Provider>\r\n    </AuthStateContext.Provider>\r\n  );\r\n};\r\n","import { onError } from '@apollo/client/link/error';\nimport { ApolloLink, Observable, from, HttpLink } from '@apollo/client';\n\nconst { log } = console;\n\nconst connections: { [key: string]: any } = {};\n\nexport const cancelRequestLink = new ApolloLink(\n  (operation, forward) =>\n    new Observable((observer) => {\n      const context = operation.getContext();\n      const connectionHandle = forward(operation).subscribe({\n        next: (...arg) => observer.next(...arg),\n        error: (...arg) => {\n          cleanUp();\n          observer.error(...arg);\n        },\n        complete: (...arg) => {\n          cleanUp();\n          observer.complete(...arg);\n        },\n      });\n\n      const cleanUp = () => {\n        connectionHandle?.unsubscribe();\n        delete connections[context.requestTrackerId];\n      };\n\n      if (context.requestTrackerId) {\n        const controller = new AbortController();\n        controller.signal.onabort = cleanUp;\n        operation.setContext({\n          ...context,\n          fetchOptions: {\n            signal: controller.signal,\n            ...context?.fetchOptions,\n          },\n        });\n\n        if (connections[context.requestTrackerId]) {\n          connections[context.requestTrackerId]?.abort();\n        }\n        connections[context.requestTrackerId] = controller;\n      }\n      return connectionHandle;\n    }),\n);\n\nexport const errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) =>\n      log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`),\n    );\n  }\n  if (networkError) log(`[Network error]: ${networkError}`);\n});\n\nexport const link = from([errorLink, cancelRequestLink, new HttpLink({ uri: process.env.REACT_APP_BACKEND_JOBS_API })]);\n","import React from 'react';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router-dom';\r\n\r\nimport { useAuthState } from 'contexts/AuthContext';\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<Props> = ({ component: Component, ...rest }) => {\r\n  const { isAuthenticated } = useAuthState();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/login',\r\n              state: {\r\n                from: props.location,\r\n              },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n","import { ajax } from 'rxjs/ajax';\r\nimport { of, Observable } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\n\r\nconst API_ROOT = process.env.REACT_APP_API_ROOT;\r\n// const JOB_API = process.env.REACT_APP_GITHUB_JOBS_API;\r\n// const API_ROOT_GRAPHQL = process.env.REACT_APP_BACKEND_JOBS_API;\r\n\r\nconst requests = (baseUrl?: string) => {\r\n  return {\r\n    get: (endpoint?: string, config?: Object) => {\r\n      const url = endpoint ? baseUrl + endpoint : baseUrl;\r\n      return ajax({\r\n        url,\r\n        method: 'GET',\r\n        headers: {\r\n          Accept: 'application/vnd.github.v3+json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        ...config,\r\n      }).pipe(\r\n        retry(1),\r\n        catchError((error: Error) => of(error)),\r\n      );\r\n    },\r\n  };\r\n};\r\n\r\n// const User = (() => {\r\n//   const Request = requests(API_ROOT_GRAPHQL);\r\n//   return {\r\n//     getUser<T>(username: string): Observable<T> | any {\r\n//       return Request.get(`users/${username}`);\r\n//     },\r\n//     getUserRepos<T>(username: string): Observable<T> | any {\r\n//       return Request.get(`users/${username}/repos`);\r\n//     },\r\n//     getFollowers<T>(username: string): Observable<T> | any {\r\n//       return Request.get(`users/${username}/followers`);\r\n//     },\r\n//     getFollowing<T>(username: string): Observable<T> | any {\r\n//       return Request.get(`users/${username}/following`);\r\n//     },\r\n//     getSubscriptions<T>(username: string): Observable<T> | any {\r\n//       return Request.get(`users/${username}/subscriptions`);\r\n//     },\r\n//     getOrganisation<T>(username: string): Observable<T> | any {\r\n//       return Request.get(`users/${username}/orgs`);\r\n//     },\r\n//     getSingleRepo<T>(username: string, repo: string): Observable<T> | any {\r\n//       return Request.get('', {\r\n//         body: JSON.stringify({\r\n//           query: `\r\n//             query {\r\n//               repository(owner: \"${username}\", name: \"${repo}\") {}\r\n//             }\r\n//           `,\r\n//         }),\r\n//       });\r\n//     },\r\n//   };\r\n// })();\r\n\r\nconst UserAuth = (() => {\r\n  const Request = requests(API_ROOT);\r\n  return {\r\n    validate<T>(): Observable<T> | any {\r\n      return Request.get('validateUser');\r\n    },\r\n  };\r\n})();\r\n\r\n// const Jobs = (() => {\r\n//   const Request = requests(JOB_API);\r\n//   return {\r\n//     getAll<T>(): Observable<T> | any {\r\n//       return Request.get();\r\n//     },\r\n//     searchByTerms<T>(term: string, params = {}): Observable<T> | any {\r\n//       const url = setQueryParams(setParams(params, 'description', term));\r\n//       // console.log(url);\r\n//       return Request.get(url);\r\n//     },\r\n//     searchByLocation<T>({ long, lat }: { long: string; lat: string }, params = {}): Observable<T> | any {\r\n//       const url = setQueryParams(setFields(params, ['long', 'lat'], { long, lat }));\r\n//       return Request.get(url);\r\n//     },\r\n//   };\r\n// })();\r\n\r\n// const setParams = (params: any, key: string, value: string): object => {\r\n//   params = { ...params, [key]: value };\r\n//   if (!value || !value.toString().trim().length) {\r\n//     delete params[key];\r\n//   }\r\n//   return params;\r\n// };\r\n\r\n// const setFields = (params: object, keys: string[], values: any): object => {\r\n//   return keys.reduce((acc, cur) => {\r\n//     return setParams(acc, cur, values[cur]);\r\n//   }, params);\r\n// };\r\n\r\n// const setQueryParams = (params: object) => {\r\n//   let qp = '?';\r\n//   for (const [key, value] of Object.entries(params)) {\r\n//     qp = qp + `&${key}=${value}`;\r\n//   }\r\n//   return qp;\r\n// };\r\n\r\nexport {\r\n  // User,\r\n  // Jobs,\r\n  // setFields,\r\n  // setParams,\r\n  UserAuth,\r\n};\r\n","import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n  absolute?: boolean;\r\n}\r\n\r\nexport const Footer: React.FC<Props> = memo(({ absolute }) => {\r\n  return (\r\n    <>\r\n      <footer\r\n        data-testid=\"footer\"\r\n        className={(absolute ? 'sm:relative md:absolute w-full bottom-0' : 'relative') + ' pb-6 bg-gray-900'}\r\n      >\r\n        <div className=\"container mx-auto px-4\">\r\n          <hr className=\"mb-6 border-b-1 border-gray-700\" />\r\n          <div className=\"flex flex-wrap items-center md:justify-between justify-center\">\r\n            <div className=\"w-full md:w-4/12 px-4\">\r\n              <div className=\"text-sm text-white font-semibold py-1\">\r\n                Copyright © {new Date().getFullYear()}{' '}\r\n                <Link to=\"/\" className=\"text-white hover:text-gray-400 text-sm font-semibold py-1\" target=\"_blank\">\r\n                  Github Timeline\r\n                </Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"w-full md:w-8/12 px-4\">\r\n              <ul className=\"flex flex-wrap list-none md:justify-end  justify-center\">\r\n                <li>\r\n                  <a\r\n                    href=\"http://michaelobasi.com\"\r\n                    className=\"text-white hover:text-gray-400 text-sm font-semibold block py-1 px-3\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    Michael Obasi\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"http://michaelobasi.com\"\r\n                    className=\"text-white hover:text-gray-400 text-sm font-semibold block py-1 px-3\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    About Me\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"https://frontendtips.netlify.app/\"\r\n                    className=\"text-white hover:text-gray-400 text-sm font-semibold block py-1 px-3\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    Blog\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a\r\n                    href=\"https://github.com/kleva-j/Github-Timeline/blob/develop/LICENCE\"\r\n                    className=\"text-white hover:text-gray-400 text-sm font-semibold block py-1 px-3\"\r\n                    rel=\"noopener noreferrer\"\r\n                    target=\"_blank\"\r\n                  >\r\n                    MIT License\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n});\r\n","export default __webpack_public_path__ + \"static/media/Bars.791e603f.svg\";","import React, { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Bars from 'assets/svg/Bars.svg';\r\n\r\ninterface Props {\r\n  transparent?: boolean;\r\n  navState?: boolean;\r\n}\r\n\r\nexport const Navbar: React.FC<Props> = memo(({ transparent, navState = false }) => {\r\n  const [navbarOpen, setNavbarOpen] = React.useState(navState);\r\n  return (\r\n    <nav\r\n      data-testid=\"navbar\"\r\n      className={\r\n        (transparent ? 'top-0 absolute z-50 w-full' : 'relative bg-white shadow-lg') +\r\n        ' flex flex-wrap items-center justify-between px-2 py-3 navbar-expand-lg'\r\n      }\r\n    >\r\n      <div className=\"container px-4 mx-auto flex flex-wrap items-center justify-between\">\r\n        <div\r\n          className=\"w-full relative flex justify-between lg:w-auto lg:static lg:block lg:justify-start\"\r\n          aria-labelledby=\"nav-item\"\r\n        >\r\n          <Link\r\n            className={\r\n              (transparent ? 'text-white' : 'text-gray-800') +\r\n              ' text-sm font-bold leading-relaxed inline-block mr-4 py-2 whitespace-no-wrap uppercase'\r\n            }\r\n            to=\"/\"\r\n          >\r\n            Github Timeline\r\n          </Link>\r\n          <button\r\n            className=\"cursor-pointer text-xl leading-none px-3 py-1 border border-solid border-transparent rounded bg-transparent block lg:hidden outline-none focus:outline-none\"\r\n            type=\"button\"\r\n            onClick={() => setNavbarOpen(!navbarOpen)}\r\n          >\r\n            <i className={(transparent ? 'text-white' : 'text-gray-800') + ' fas fa-bars'}>\r\n              <img src={Bars} alt=\"burger-nav\" />\r\n            </i>\r\n          </button>\r\n        </div>\r\n        <div\r\n          data-testid=\"list\"\r\n          className={\r\n            'lg:flex flex-grow items-center bg-white lg:bg-transparent lg:shadow-none' +\r\n            (navbarOpen ? ' block rounded shadow-lg' : ' hidden')\r\n          }\r\n          id=\"example-navbar-warning\"\r\n        >\r\n          <ul className=\"flex flex-col lg:flex-row list-none mr-auto\">\r\n            <li className=\"flex items-center\">\r\n              <Link\r\n                className={\r\n                  (transparent\r\n                    ? 'lg:text-white lg:hover:text-gray-300 text-gray-800'\r\n                    : 'text-gray-800 hover:text-gray-600') +\r\n                  ' px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold'\r\n                }\r\n                to=\"/jobs\"\r\n              >\r\n                <i\r\n                  className={\r\n                    (transparent ? 'lg:text-gray-300 text-gray-500' : 'text-gray-500') +\r\n                    ' far fa-file-alt text-lg leading-lg mr-2'\r\n                  }\r\n                />{' '}\r\n                Jobs\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          <ul className=\"flex flex-col lg:flex-row list-none lg:ml-auto\">\r\n            <li className=\"flex items-center\">\r\n              <Link\r\n                className={\r\n                  (transparent\r\n                    ? 'lg:text-white lg:hover:text-gray-300 text-gray-800'\r\n                    : 'text-gray-800 hover:text-gray-600') +\r\n                  ' px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold'\r\n                }\r\n                to=\"#twitter\"\r\n              >\r\n                <i\r\n                  className={\r\n                    (transparent ? 'lg:text-gray-300 text-gray-500' : 'text-gray-500') +\r\n                    ' fab fa-twitter text-lg leading-lg '\r\n                  }\r\n                />\r\n                <span className=\"lg:hidden inline-block ml-2\">Tweet</span>\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"flex items-center\">\r\n              <Link\r\n                className={\r\n                  (transparent\r\n                    ? 'lg:text-white lg:hover:text-gray-300 text-gray-800'\r\n                    : 'text-gray-800 hover:text-gray-600') +\r\n                  ' px-3 py-4 lg:py-2 flex items-center text-xs uppercase font-bold'\r\n                }\r\n                to=\"#github-stars\"\r\n              >\r\n                <i\r\n                  className={\r\n                    (transparent ? 'lg:text-gray-300 text-gray-500' : 'text-gray-500') +\r\n                    ' fab fa-github text-lg leading-lg '\r\n                  }\r\n                />\r\n                <span className=\"lg:hidden inline-block ml-2\">Star</span>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { Footer } from 'components/Footer';\r\nimport { Navbar } from 'components/Navbar';\r\n\r\nexport const Timeline: React.FC = () => (\r\n  <>\r\n    <Helmet>\r\n      <title>User Timeline - Github</title>\r\n      <meta name=\"description\" content=\"Gitline jobs page\" />\r\n    </Helmet>\r\n    <Navbar transparent={false} />\r\n    <article className=\"my-10\">\r\n      <h2 className=\"text-gray-500 text-center\">This is the Timeline page.</h2>\r\n    </article>\r\n    <Footer absolute />\r\n  </>\r\n);\r\n","import React from 'react';\r\nimport tw from 'tailwind.macro';\r\nimport styled from 'styled-components';\r\n\r\nexport const Button: React.FC<any> = styled('button')`\r\n  ${tw`bg-white active:bg-gray-100 text-gray-800 px-4 py-2 rounded outline-none focus:outline-none mr-2 mb-1 uppercase shadow hover:shadow-md inline-flex items-center font-bold text-xs`};\r\n\r\n  transition: all 0.15s ease;\r\n`;\r\n\r\ninterface BgProps {\r\n  url: any;\r\n}\r\n\r\ninterface TagProps {\r\n  active: boolean;\r\n}\r\n\r\nexport const LoginBg: any = styled('div')`\r\n  ${tw`absolute top-0 w-full h-full bg-gray-900`}\r\n\r\n  background-image: url(${(props: BgProps) => props?.url});\r\n  background-repeat: no-repeat;\r\n  background-size: 100%;\r\n`;\r\n\r\nexport const DefaultBg: React.FC = styled('section')`\r\n  ${tw`absolute top-0 w-full h-full bg-gray-900`}\r\n`;\r\n\r\nexport const JobItem: React.FC = styled('aside')`\r\n  ${tw`flex my-4 bg-white mx-auto max-w-3xl p-4 rounded-md`}\r\n\r\n  box-shadow: 0px 1px 2px .5px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nexport const JobItem2: React.FC = styled('aside')`\r\n  ${tw`max-w-3xl mx-auto px-5 sm:px-10 my-4 py-4 sm:py-6 bg-white rounded-lg shadow-md`}\r\n`;\r\n\r\nexport const TagContainer: React.FC = styled('section')`\r\n  ${tw`mx-auto max-w-3xl flex flex-wrap`}\r\n\r\n  justify-content: evenly;\r\n`;\r\n\r\nexport const Tag: any = styled('button')`\r\n  ${tw`font-sans text-xs rounded px-3 py-1 m-2 select-none`}\r\n\r\n  background: ${(props: TagProps) => (props.active ? '#1a202c' : '#edf2f7')};\r\n  color: ${(props) => (props.active ? 'white' : 'black')};\r\n\r\n  &:focus {\r\n    outline: 2px solid transparent;\r\n    outline-offset: 2px;\r\n  }\r\n`;\r\n\r\nexport const TagSm: any = styled('button')`\r\n  ${tw`font-sans text-xs rounded px-2 py-1 m-1 mr-2 mb-0 ml-0 select-none text-gray-800 bg-gray-400`}\r\n\r\n  &:focus {\r\n    outline: 2px solid transparent;\r\n    outline-offset: 2px;\r\n  }\r\n`;\r\n\r\nexport const RefetchBtn = styled(Button)`\r\n  ${tw`text-white bg-gray-900`}\r\n`;\r\n","export default __webpack_public_path__ + \"static/media/github.83a5e195.svg\";","export default __webpack_public_path__ + \"static/media/bg_1.4f2cb0ac.png\";","import { Helmet } from 'react-helmet';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { Button, LoginBg } from 'styled';\r\n\r\nimport { Footer } from 'components/Footer';\r\nimport { Navbar } from 'components/Navbar';\r\n\r\nimport { useAuthState } from 'contexts/AuthContext';\r\n\r\nimport githubImg from 'assets/img/github.svg';\r\nimport bgImg from 'assets/img/bg_1.png';\r\n\r\nexport const Login: React.FC = () => {\r\n  let history = useHistory();\r\n  const context = useAuthState();\r\n  const { isAuthenticated } = context;\r\n\r\n  useEffect(() => {\r\n    isAuthenticated && history.push('/timeline');\r\n  }, [history, isAuthenticated]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Login - Github Timeline</title>\r\n        <meta name=\"description\" content=\"Gitline login page\" />\r\n      </Helmet>\r\n      <Navbar transparent />\r\n      <main>\r\n        <section className=\"absolute w-full h-full\">\r\n          <LoginBg url={bgImg} />\r\n\r\n          <div className=\"container mx-auto px-4 h-full\">\r\n            <div className=\"flex content-center items-center justify-center h-full\">\r\n              <div className=\"w-2/3 md:w-4/12 lg:w-3/12 xl:w-2/12 px-4 mb-12\">\r\n                <div className=\"relative flex flex-col min-w-0 break-words w-full shadow-lg rounded-lg bg-gray-300 border-0\">\r\n                  <div className=\"rounded-t mb-0 py-6\">\r\n                    <div className=\"text-center mb-3\">\r\n                      <h6 className=\"text-gray-600 text-md font-bold\">Sign in with</h6>\r\n                    </div>\r\n                    <div className=\"btn-wrapper text-center\">\r\n                      <a href={process.env.REACT_APP_LOGIN_ENDPOINT} target=\"_self\" rel=\"noopener noreferrer\">\r\n                        <Button>\r\n                          <img alt=\"Github logo\" className=\"w-5 mr-1\" src={githubImg} />\r\n                          Github\r\n                        </Button>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Footer absolute />\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n","import React, { memo, useCallback, useState } from 'react';\r\nimport { Tag, TagContainer } from 'styled';\r\n\r\ntype tTag = {\r\n  title: string;\r\n  isActive: boolean;\r\n};\r\n\r\nconst Tags: tTag[] = [\r\n  { title: 'Full Time', isActive: false },\r\n  { title: 'remote', isActive: false },\r\n  { title: 'HTML', isActive: false },\r\n  { title: 'CSS', isActive: false },\r\n  { title: 'SASS', isActive: false },\r\n  { title: 'JavaScript', isActive: false },\r\n  { title: 'TypeScript', isActive: false },\r\n  { title: 'React', isActive: false },\r\n  { title: 'Angular', isActive: false },\r\n  { title: 'Vue', isActive: false },\r\n  { title: 'Svelte', isActive: false },\r\n\r\n  { title: 'Java', isActive: false },\r\n  { title: 'Ruby', isActive: false },\r\n  { title: 'Python', isActive: false },\r\n  { title: 'Nodejs', isActive: false },\r\n  { title: 'Go', isActive: false },\r\n  { title: 'Swift', isActive: false },\r\n  { title: 'C', isActive: false },\r\n  { title: 'C++', isActive: false },\r\n  { title: 'C#', isActive: false },\r\n  { title: 'Scala', isActive: false },\r\n  { title: 'R', isActive: false },\r\n\r\n  { title: 'Kotlin', isActive: false },\r\n  { title: 'PHP', isActive: false },\r\n  { title: 'Rust', isActive: false },\r\n  { title: 'Elm', isActive: false },\r\n  { title: 'Objective-C', isActive: false },\r\n  { title: 'LISP', isActive: false },\r\n  { title: 'Perl', isActive: false },\r\n  { title: 'SQL', isActive: false },\r\n  { title: 'Haskel', isActive: false },\r\n  { title: 'Erlang', isActive: false },\r\n  { title: 'Clojure', isActive: false },\r\n];\r\n\r\nexport const TagList: React.FC<{ setParams: Function }> = memo(({ setParams }) => {\r\n  const [state, setState] = useState(Tags);\r\n\r\n  const handleClick = (index: number, isActive: boolean) => {\r\n    const newList = [...state];\r\n    newList[index].isActive = !isActive;\r\n    setState(() => newList);\r\n    handleUpdate();\r\n  };\r\n\r\n  const handleUpdate = useCallback(() => {\r\n    const newState = state;\r\n    const params = newState\r\n      .filter((item) => item.isActive)\r\n      .reduce(\r\n        (prev: any, next: tTag) => {\r\n          let { description, location, full_time } = prev;\r\n          if (next.title === 'Full Time') full_time = 'on';\r\n          else if (next.title === 'remote') location = 'remote';\r\n          else description = [...description, next.title];\r\n          return { description, location, full_time };\r\n        },\r\n        { description: [], location: '', full_time: '' },\r\n      );\r\n    setParams({\r\n      description: params.description.join('+') || undefined,\r\n      location: params.location || undefined,\r\n      full_time: params.full_time || undefined,\r\n    });\r\n  }, [state, setParams]);\r\n\r\n  return (\r\n    <TagContainer>\r\n      {state.map(({ title, isActive }, index) => (\r\n        <Tag data-testid={`id-${index}`} key={title} active={isActive} onClick={() => handleClick(index, isActive)}>\r\n          {title}\r\n        </Tag>\r\n      ))}\r\n    </TagContainer>\r\n  );\r\n});\r\n","import PropTypes from 'prop-types';\r\nimport React, { memo, useEffect } from 'react';\r\nimport { usePagination } from 'react-pagination-hook';\r\n\r\ninterface IProps {\r\n  noOfItems: number;\r\n  setPage: Function;\r\n}\r\n\r\nexport const Pager: React.FC<IProps> = memo(({ noOfItems = 0, setPage }) => {\r\n  const limit = Math.floor(noOfItems / 10);\r\n  const numberOfPages = noOfItems % 10 ? limit + 1 : limit;\r\n  const { activePage, isFirst, isLast, hasPrevious, hasNext, visiblePieces, goToPage } = usePagination({\r\n    initialPage: 1,\r\n    maxButtons: 2,\r\n    numberOfPages,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setPage(activePage);\r\n  }, [setPage, activePage]);\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation\" className=\"flex justify-center my-10\">\r\n      <ul className=\"inline-flex space-x-2 items-center\">\r\n        <li>\r\n          <button\r\n            data-testid=\"prev-button\"\r\n            className={`flex items-center justify-center w-10 h-10 text-gray-600 transition-colors duration-150 border rounded focus:outline-none hover:bg-gray-100 ${\r\n              isFirst && 'cursor-not-allowed'\r\n            } `}\r\n            onClick={() => {\r\n              hasPrevious && goToPage(activePage - 1);\r\n              !isFirst && window.scrollTo(0, 0);\r\n            }}\r\n          >\r\n            <svg className=\"w-4 h-4 fill-current\" viewBox=\"0 0 20 20\">\r\n              <path d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"></path>\r\n            </svg>\r\n          </button>\r\n        </li>\r\n        {visiblePieces\r\n          .filter((item) => item.type === 'page-number')\r\n          .map(({ pageNumber }: any, index: number) => (\r\n            <li key={index}>\r\n              <button\r\n                data-testid={`pageNumber-${pageNumber}`}\r\n                className={`w-10 h-10 ${\r\n                  pageNumber === activePage\r\n                    ? 'text-white bg-gray-900 border border-r-0 border-gray-600'\r\n                    : 'text-gray-600 hover:bg-gray-100'\r\n                } transition-colors duration-150 rounded focus:outline-none`}\r\n                onClick={() => {\r\n                  goToPage(pageNumber);\r\n                  window.scrollTo(0, 0);\r\n                }}\r\n              >\r\n                {pageNumber}\r\n              </button>\r\n            </li>\r\n          ))}\r\n        <li>\r\n          <button\r\n            data-testid=\"next-button\"\r\n            className={`flex items-center justify-center w-10 h-10 text-gray-600 transition-colors duration-150 bg-white border rounded focus:outline-none hover:bg-gray-100 ${\r\n              !hasNext && 'cursor-not-allowed'\r\n            } `}\r\n            onClick={() => {\r\n              hasNext && goToPage(activePage + 1);\r\n              !isLast && window.scrollTo(0, 0);\r\n            }}\r\n          >\r\n            <svg className=\"w-4 h-4 fill-current\" viewBox=\"0 0 20 20\">\r\n              <path d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"></path>\r\n            </svg>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n});\r\n\r\nPager.propTypes = {\r\n  noOfItems: PropTypes.number.isRequired,\r\n  setPage: PropTypes.func.isRequired,\r\n};\r\n","import React, { memo } from 'react';\r\n\r\nexport const SearchForms: React.FC = memo(() => {\r\n  return (\r\n    <form className=\"flex flex-col sm:flex-row max-w-3xl mx-auto\">\r\n      <aside className=\"flex-1 my-2 md:mx-2 md:ml-0\">\r\n        <label htmlFor=\"desc\" className=\"text-sm font-semibold\">Job Description</label>\r\n        <input\r\n          id=\"desc\"\r\n          type=\"text\"\r\n          name=\"description\"\r\n          placeholder=\"Filter by title, benefits, companies, expertise\"\r\n          className=\"w-full py-2 px-4 border rounded bg-white\"\r\n        />\r\n      </aside>\r\n\r\n      <aside className=\"flex-1 my-2 sm:mx-2 md:mr-0\">\r\n        <label htmlFor=\"location\" className=\"text-sm font-semibold\">Location</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"location\"\r\n          name=\"location\"\r\n          placeholder=\"Filter by city, state, zip code or country\"\r\n          className=\"w-full py-2 px-4 border rounded bg-white\"\r\n        />\r\n      </aside>\r\n    </form>\r\n  );\r\n});\r\n","export default __webpack_public_path__ + \"static/media/Company_logo.a55e80a8.svg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Job } from 'components/SingleJob';\r\n\r\nimport { JobItem2, TagSm } from 'styled';\r\nimport defaultLogo from 'assets/svg/Company_logo.svg';\r\n\r\ninterface DateTimeFormatOptions {\r\n  year?: 'numeric' | '2-digit';\r\n  month?: 'numeric' | '2-digit' | 'long' | 'short' | 'narrow';\r\n  day?: 'numeric' | '2-digit';\r\n}\r\n\r\nconst options: DateTimeFormatOptions = {\r\n  year: 'numeric',\r\n  month: 'short',\r\n  day: 'numeric',\r\n};\r\n\r\nconst lang: string = navigator.language || 'en-US';\r\n\r\nexport const Template2: React.FC<Job> = ({\r\n  id,\r\n  title,\r\n  company,\r\n  created_at,\r\n  url,\r\n  type,\r\n  location,\r\n  company_url,\r\n  company_logo,\r\n}) => {\r\n  const date = new Date(created_at);\r\n  const formatedDate = new Intl.DateTimeFormat(lang, options).format(date);\r\n  return (\r\n    <JobItem2 data-testid={`job-${id}`}>\r\n      <div className=\"flex flex-col sm:flex-row justify-between sm:items-center\">\r\n        <span className=\"font-light text-gray-600\">{formatedDate}</span>\r\n        <div className=\"flex justify-start py-1\">\r\n          <TagSm data-testid={`type-${id}`} className=\"text-gray-700 truncate whitespace-nowrap\">\r\n            {type}\r\n          </TagSm>\r\n          <TagSm data-testid={`location-${id}`} className=\"text-gray-700 truncate whitespace-nowrap\">\r\n            {location}\r\n          </TagSm>\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-2\" data-testid={`title-${id}`}>\r\n        <a\r\n          className=\"text-xl text-gray-700 font-bold hover:text-gray-600\"\r\n          href={url}\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          {title}\r\n        </a>\r\n      </div>\r\n      <div className=\"flex flex-col sm:flex-row justify-between sm:items-center mt-4\">\r\n        <a\r\n          className=\"text-blue-600 hover:underline whitespace-nowrap order-last sm:order-first mt-2 sm:mt-0\"\r\n          href={url}\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          Read more\r\n        </a>\r\n        <div>\r\n          <a className=\"flex items-center\" href={company_url} rel=\"noopener noreferrer\" target=\"_blank\">\r\n            <img\r\n              className=\"mx-4 w-10 h-10 object-contain hidden sm:block\"\r\n              src={company_logo || defaultLogo}\r\n              alt=\"Company Logo\"\r\n            />\r\n            <h1 className=\"text-gray-600 font-bold\">{company}</h1>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </JobItem2>\r\n  );\r\n};\r\n\r\nTemplate2.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  company: PropTypes.string.isRequired,\r\n  created_at: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  company_url: PropTypes.string.isRequired,\r\n  company_logo: PropTypes.string.isRequired,\r\n  how_to_apply: PropTypes.string.isRequired,\r\n};\r\n","export default __webpack_public_path__ + \"static/media/loading-gif.ba5456b1.webp\";","export default __webpack_public_path__ + \"static/media/no-content.382a4e0f.webp\";","export default __webpack_public_path__ + \"static/media/error-gif.f1f7812f.webp\";","import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ApolloError } from '@apollo/client';\r\n\r\nimport { RefetchBtn } from 'styled';\r\n\r\nimport { Job } from './SingleJob';\r\nimport { Template2 } from './JobsTemplate';\r\n\r\nimport loadingGif from 'assets/img/loading-gif.webp';\r\nimport noContent from 'assets/img/no-content.webp';\r\nimport errorGif from 'assets/img/error-gif.webp';\r\n\r\ninterface IProps {\r\n  loading: boolean;\r\n  error: ApolloError | undefined;\r\n  data: {\r\n    jobs: Job[];\r\n  };\r\n  currentPage: number;\r\n  refetch: Function;\r\n}\r\n\r\nexport const GetAllJobs: React.FC<IProps> = memo(({ loading, error, data, currentPage, refetch }) => {\r\n  const limit = currentPage * 10;\r\n  const offset = (currentPage - 1) * 10;\r\n\r\n  if (loading)\r\n    return (\r\n      <div data-testid=\"loading\" className=\"text-center my-20 mx-auto w-max\">\r\n        <img src={loadingGif} className=\"select-none object-contain\" alt=\"Loading gif\" />\r\n      </div>\r\n    );\r\n  if (error)\r\n    return (\r\n      <div data-testid=\"error\" className=\"text-center my-10\">\r\n        <img src={errorGif} className=\"select-none object-contain w-max mx-auto\" alt=\"Error gif\" />\r\n        <RefetchBtn onClick={() => refetch()}>Refetch Content</RefetchBtn>\r\n      </div>\r\n    );\r\n  return (\r\n    <>\r\n      {data.jobs.length === 0 && (\r\n        <div data-testid=\"no-content\" className=\"text-center my-20\">\r\n          <img src={noContent} className=\"select-none object-contain w-max mx-auto\" alt=\"No content\" />\r\n        </div>\r\n      )}\r\n      <article className=\"w-full\" data-testid=\"jobs-article\">\r\n        {data?.jobs.slice(offset, limit).map((item: Job) => (\r\n          <Template2 {...item} key={item.id} />\r\n        ))}\r\n      </article>\r\n    </>\r\n  );\r\n});\r\n\r\nGetAllJobs.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.any,\r\n  currentPage: PropTypes.number.isRequired,\r\n  refetch: PropTypes.func.isRequired,\r\n};\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const LOAD_JOBS = gql`\r\n  query GetJobs($page: Int!, $description: String, $location: String, $full_time: String) {\r\n    jobs(page: $page, description: $description, location: $location, full_time: $full_time) {\r\n      id\r\n      title\r\n      type\r\n      company\r\n      description\r\n      url\r\n      location\r\n      created_at\r\n      company_url\r\n      how_to_apply\r\n      company_logo\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LOAD_SINGLE_JOB = gql`\r\n  query GetJob($id: ID!) {\r\n    job(id: $id) {\r\n      id\r\n      title\r\n      type\r\n      company\r\n      description\r\n      url\r\n      location\r\n      created_at\r\n      company_url\r\n      how_to_apply\r\n      company_logo\r\n    }\r\n  }\r\n`;\r\n","import { Helmet } from 'react-helmet';\r\nimport { useQuery } from '@apollo/client';\r\nimport React, { useCallback, useState } from 'react';\r\nimport { v5 as uuidNameSpace, v4 as getNS } from 'uuid';\r\n\r\nimport { Footer } from 'components/Footer';\r\nimport { Navbar } from 'components/Navbar';\r\nimport { TagList } from 'components/TagList';\r\nimport { Pager } from 'components/Pagination';\r\nimport { SearchForms } from 'components/Form';\r\nimport { GetAllJobs } from 'components/AllJobs';\r\n\r\nimport { LOAD_JOBS } from 'GraphQL/Queries';\r\n\r\nconst GenerateNameSpace = getNS();\r\n\r\ninterface IState {\r\n  page: number;\r\n  description: string | undefined;\r\n  location: string | undefined;\r\n  full_time: string | undefined;\r\n}\r\n\r\nexport const Jobs: React.FC = () => {\r\n  const [state, setState] = useState<IState>({\r\n    page: 1,\r\n    description: undefined,\r\n    location: undefined,\r\n    full_time: undefined,\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const { loading, error, data, refetch } = useQuery(LOAD_JOBS, {\r\n    variables: { ...state },\r\n    notifyOnNetworkStatusChange: true,\r\n    context: {\r\n      requestTrackerId: uuidNameSpace('JOBS', GenerateNameSpace),\r\n    },\r\n  });\r\n\r\n  const setParams = useCallback((params: IState) => setState((prevState) => ({ ...prevState, ...params })), []);\r\n  const setPage = useCallback((page: number) => setCurrentPage(() => page), []);\r\n\r\n  const noOfItems = data?.jobs.length;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Jobs - Github Timeline</title>\r\n        <meta name=\"description\" content=\"Gitline jobs page\" />\r\n      </Helmet>\r\n      <section className=\"min-h-screen\">\r\n        <Navbar transparent={false} />\r\n        <article className=\"my-4 px-3\">\r\n          <SearchForms />\r\n          <TagList setParams={setParams} />\r\n          <GetAllJobs loading={loading} error={error} data={data} refetch={refetch} currentPage={currentPage} />\r\n          <Pager noOfItems={noOfItems || 0} setPage={setPage} />\r\n        </article>\r\n      </section>\r\n      <Footer absolute={loading || (error && true)} />\r\n    </>\r\n  );\r\n};\r\n","import { Helmet } from 'react-helmet';\r\nimport React, { useEffect } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { ProtectedRoute } from 'components/protected.route';\r\n\r\nimport { useAuthDispatch } from 'contexts/AuthContext';\r\n\r\nimport { validateUser } from 'actions/auth';\r\n\r\nimport { Timeline } from 'views/Timeline';\r\nimport { Login } from 'views/Login';\r\nimport { Jobs } from 'views/Jobs';\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch = useAuthDispatch();\r\n  useEffect(() => {\r\n    const userEvent = validateUser(dispatch);\r\n    return () => {\r\n      userEvent.unsubscribe();\r\n    };\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Home - Github Timeline</title>\r\n        <link rel=\"canonical\" href={process.env.REACT_APP_FRONTEND_URL} />\r\n      </Helmet>\r\n      <Switch>\r\n        <Redirect exact from=\"/\" to=\"/timeline\" />\r\n        <ProtectedRoute exact path=\"/timeline\" component={Timeline} />\r\n        <Route exact path=\"/jobs\" component={Jobs} />\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route path=\"*\" component={() => <h1>404 NOT FOUND</h1>} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { UserAuth } from 'services/api';\r\n\r\nexport const validateUser = (dispatch: React.Dispatch<any> | any): any => {\r\n  dispatch({ type: 'VALIDATE_USER' });\r\n  return UserAuth.validate().subscribe((result: any) => {\r\n    const { status, response } = result;\r\n    if (status === 200 && response?.auth) {\r\n      dispatch({\r\n        type: 'VALIDATE_SUCCESS',\r\n        payload: { isAuthenticated: response.auth },\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: 'VALIDATE_ERROR',\r\n        payload: { error: response?.message || 'Error occured' },\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const logout = (dispatch: Function): void => {\r\n  dispatch({ type: 'LOGOUT' });\r\n};\r\n","import { render } from 'react-dom';\r\nimport { StrictMode } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\r\n\r\nimport { UserProvider } from 'contexts/UserContext';\r\nimport { AuthProvider } from 'contexts/AuthContext';\r\nimport { link } from 'ApolloLinkConfig';\r\n\r\nimport App from './App';\r\n\r\nimport './index.css';\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link,\r\n  queryDeduplication: false,\r\n});\r\n\r\nexport const rootElement = document.getElementById('root');\r\n\r\nexport const Node = (\r\n  <StrictMode>\r\n    <ApolloProvider client={client}>\r\n      <AuthProvider>\r\n        <UserProvider>\r\n          <Router>\r\n            <App />\r\n          </Router>\r\n        </UserProvider>\r\n      </AuthProvider>\r\n    </ApolloProvider>\r\n  </StrictMode>\r\n);\r\n\r\nrender(Node, rootElement);\r\n"],"sourceRoot":""}